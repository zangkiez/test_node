{"version":3,"sources":["App.js","index.js"],"names":["Header","props","className","numTodos","TodoList","todos","tasks","map","todo","index","content","topic","key","id","onDelete","Todo","class","onClick","App","handleDelete","console","log","newArr","state","splice","setState","fetch","method","then","response","text","result","handleSubmit","task","requestOptions","headers","body","JSON","stringify","json","data","this","length","onFormSubmit","Component","SubmitForm","term","e","preventDefault","onSubmit","type","placeholder","value","onChange","target","React","ReactDOM","render","document","getElementById"],"mappings":"sRAIMA,G,MAAS,SAACC,GAEd,OACE,yBAAKC,UAAU,eACb,wBAAIA,UAAU,4BAAd,oDACYD,EAAME,SADlB,0BAOAC,EAAW,SAACH,GAChB,IAAMI,EAAQJ,EAAMK,MAAMC,KAAI,SAACC,EAAMC,GAEnC,OACE,kBAAC,EAAD,CACEC,QAASF,EAAKG,MACdC,IAAKJ,EAAKK,GACVA,GAAI,CAAC,CAAEA,GAAIL,EAAKK,GAAIJ,MAAOA,IAC3BK,SAAUb,EAAMa,cAItB,OAAO,yBAAKZ,UAAU,gBAAgBG,IAGlCU,EAAO,SAACd,GACZ,OACE,yBAAKC,UAAU,aACZD,EAAMS,QACP,4BACEM,MAAM,yBACNC,QAAS,WACPhB,EAAMa,SAASb,EAAMY,SAQzBK,E,kDACJ,aAAe,IAAD,8BACZ,gBAcFC,aAAe,SAACV,GACdA,EAAMF,KAAI,SAACE,GACTW,QAAQC,IAAIZ,GAEZ,IAAMa,EAAM,YAAO,EAAKC,MAAMjB,OAC9Bc,QAAQC,IAAIC,GACZA,EAAOE,OAAOf,EAAMA,MAAO,GAC3BW,QAAQC,IAAIC,GACZ,EAAKG,SAAS,CAAEnB,MAAOgB,IAMvBI,IAAM,oDAAD,OACiDjB,EAAMI,IALrC,CACrBc,OAAQ,WAOPC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAYX,QAAQC,IAAIU,UAlCtB,EAuCdC,aAAe,SAACC,GAEd,IAAMC,EAAiB,CACrBP,OAAQ,OACRQ,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CAAE3B,MAAOsB,KAGhCP,IAAM,mDAAoDQ,GAEvDN,MAAK,SAACC,GACLA,EAASU,OAAOX,MAAK,SAACY,GACpB,EAAKf,SAAS,CAAEnB,MAAM,GAAD,mBAAM,EAAKiB,MAAMjB,OAAjB,CAAwBkC,aAjDnD,EAAKjB,MAAQ,CACXjB,MAAO,IAHG,E,kMAQWoB,IACrB,oD,cADIG,E,gBAGaA,EAASU,O,OAAtBA,E,OACNE,KAAKhB,SAAS,CAAEnB,MAAOiC,I,qIA6CvB,OACE,yBAAKrC,UAAU,WACb,yBAAKA,UAAU,cACb,kBAAC,EAAD,CAAQC,SAAUsC,KAAKlB,MAAMjB,MAAMoC,SACnC,kBAAC,EAAD,CAAUpC,MAAOmC,KAAKlB,MAAMjB,MAAOQ,SAAU2B,KAAKtB,eAClD,kBAAC,EAAD,CAAYwB,aAAcF,KAAKT,qB,GA/DvBY,aAsEZC,E,4MACJtB,MAAQ,CAAEuB,KAAM,I,EAEhBd,aAAe,SAACe,GACdA,EAAEC,iBACsB,KAApB,EAAKzB,MAAMuB,OACf,EAAK7C,MAAM0C,aAAa,EAAKpB,MAAMuB,MACnC,EAAKrB,SAAS,CAAEqB,KAAM,O,uDAGd,IAAD,OACP,OACE,0BAAMG,SAAUR,KAAKT,cACnB,2BACEkB,KAAK,OACLhD,UAAU,QACViD,YAAY,aACZC,MAAOX,KAAKlB,MAAMuB,KAClBO,SAAU,SAACN,GAAD,OAAO,EAAKtB,SAAS,CAAEqB,KAAMC,EAAEO,OAAOF,WAElD,4BAAQlD,UAAU,UAAlB,e,GApBiBqD,IAAMX,WA0BhB1B,ICvIfsC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.3c8bf88e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport fetch from \"isomorphic-fetch\";\nimport \"./App.css\";\n\nconst Header = (props) => {\n  //console.log(props.numTodos);\n  return (\n    <div className=\"card-header\">\n      <h1 className=\"card-header-title header\">\n        คุณมีงาน {props.numTodos} งาน\n      </h1>\n    </div>\n  );\n};\n\nconst TodoList = (props) => {\n  const todos = props.tasks.map((todo, index) => {\n    //console.log(todo);\n    return (\n      <Todo\n        content={todo.topic}\n        key={todo.id}\n        id={[{ id: todo.id, index: index }]}\n        onDelete={props.onDelete}\n      />\n    );\n  });\n  return <div className=\"list-wrapper\">{todos}</div>;\n};\n\nconst Todo = (props) => {\n  return (\n    <div className=\"list-item\">\n      {props.content}\n      <button\n        class=\"delete is-pulled-right\"\n        onClick={() => {\n          props.onDelete(props.id);\n          //console.log(props.id);\n        }}\n      ></button>\n    </div>\n  );\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      tasks: [],\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\n      \"https://5e936fb4c7393c0016de4839.mockapi.io/time\"\n    );\n    const json = await response.json();\n    this.setState({ tasks: json });\n  }\n\n  handleDelete = (index) => {\n    index.map((index) => {\n      console.log(index);\n\n      const newArr = [...this.state.tasks];\n      console.log(newArr);\n      newArr.splice(index.index, 1);\n      console.log(newArr);\n      this.setState({ tasks: newArr });\n\n      const requestOptions = {\n        method: \"DELETE\",\n      };\n\n      fetch(\n        `https://5e936fb4c7393c0016de4839.mockapi.io/time/${index.id}`,\n        requestOptions\n      )\n        .then((response) => response.text())\n        .then((result) => console.log(result));\n    });\n    //console.log(listItems);\n  };\n\n  handleSubmit = (task) => {\n    //const self = this;\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ topic: task }),\n    };\n\n    fetch(\"https://5e936fb4c7393c0016de4839.mockapi.io/time\", requestOptions)\n      //.then((response) => response.json())\n      .then((response) => {\n        response.json().then((data) => {\n          this.setState({ tasks: [...this.state.tasks, data] });\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"card frame\">\n          <Header numTodos={this.state.tasks.length} />\n          <TodoList tasks={this.state.tasks} onDelete={this.handleDelete} />\n          <SubmitForm onFormSubmit={this.handleSubmit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass SubmitForm extends React.Component {\n  state = { term: \"\" };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.term === \"\") return;\n    this.props.onFormSubmit(this.state.term);\n    this.setState({ term: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Enter Item\"\n          value={this.state.term}\n          onChange={(e) => this.setState({ term: e.target.value })}\n        />\n        <button className=\"button\">Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./index.css\";\nimport App from \"./App\";\n//import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}